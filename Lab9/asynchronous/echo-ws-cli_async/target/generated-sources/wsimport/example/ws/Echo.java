
package example.ws;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Echo", targetNamespace = "http://ws.example/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Echo {


    /**
     * 
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<example.ws.EchoResponse>
     */
    @WebMethod(operationName = "echo")
    @RequestWrapper(localName = "echo", targetNamespace = "http://ws.example/", className = "example.ws.Echo_Type")
    @ResponseWrapper(localName = "echoResponse", targetNamespace = "http://ws.example/", className = "example.ws.EchoResponse")
    public Response<EchoResponse> echoAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "echo")
    @RequestWrapper(localName = "echo", targetNamespace = "http://ws.example/", className = "example.ws.Echo_Type")
    @ResponseWrapper(localName = "echoResponse", targetNamespace = "http://ws.example/", className = "example.ws.EchoResponse")
    public Future<?> echoAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<EchoResponse> asyncHandler);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws EchoException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "echo", targetNamespace = "http://ws.example/", className = "example.ws.Echo_Type")
    @ResponseWrapper(localName = "echoResponse", targetNamespace = "http://ws.example/", className = "example.ws.EchoResponse")
    @Action(input = "http://ws.example/Echo/echoRequest", output = "http://ws.example/Echo/echoResponse", fault = {
        @FaultAction(className = EchoException_Exception.class, value = "http://ws.example/Echo/echo/Fault/EchoException")
    })
    public String echo(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws EchoException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<example.ws.FastEchoResponse>
     */
    @WebMethod(operationName = "fastEcho")
    @RequestWrapper(localName = "fastEcho", targetNamespace = "http://ws.example/", className = "example.ws.FastEcho")
    @ResponseWrapper(localName = "fastEchoResponse", targetNamespace = "http://ws.example/", className = "example.ws.FastEchoResponse")
    public Response<FastEchoResponse> fastEchoAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "fastEcho")
    @RequestWrapper(localName = "fastEcho", targetNamespace = "http://ws.example/", className = "example.ws.FastEcho")
    @ResponseWrapper(localName = "fastEchoResponse", targetNamespace = "http://ws.example/", className = "example.ws.FastEchoResponse")
    public Future<?> fastEchoAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<FastEchoResponse> asyncHandler);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws EchoException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "fastEcho", targetNamespace = "http://ws.example/", className = "example.ws.FastEcho")
    @ResponseWrapper(localName = "fastEchoResponse", targetNamespace = "http://ws.example/", className = "example.ws.FastEchoResponse")
    @Action(input = "http://ws.example/Echo/fastEchoRequest", output = "http://ws.example/Echo/fastEchoResponse", fault = {
        @FaultAction(className = EchoException_Exception.class, value = "http://ws.example/Echo/fastEcho/Fault/EchoException")
    })
    public String fastEcho(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws EchoException_Exception
    ;

}
